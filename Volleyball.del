import "Lava.del";

globalvar define volleyball;
globalvar define detonationCounter;
globalvar define detonationTime;
globalvar define isCountingDown;
globalvar define onTeam;
globalvar define counterTexts;
globalvar define laser1Effect !;
globalvar define laser2Effect !;
globalvar define laser3Effect !;

rule: "Volleyball: Setup"
if (gamemode == Mode.Volleyball)
{
    InitSpawns();
    async! respawnBall();
    volleyball = true;

    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        PolePos() + Vector(0, 0.5, 150),
        PolePos() + Vector(0, 0.5, -150),
        Color.Red,
        EffectRev.VisibleToPositionAndRadius
    );
    laser1Effect = LastCreatedEntity();

    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        PolePos() + Vector(0, 2, 150),
        PolePos() + Vector(0, 2, -150),
        Color.Red,
        EffectRev.VisibleToPositionAndRadius
    );
    laser2Effect = LastCreatedEntity();

    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        PolePos() + Vector(0, 3.5, 150),
        PolePos() + Vector(0, 3.5, -150),
        Color.Red,
        EffectRev.VisibleToPositionAndRadius
    );
    laser3Effect = LastCreatedEntity();

    detonationTime = 10;

    DestroyTutorialText();
    CreateHudText(
        VisibleTo      : AllPlayers(),
        Text           : "Keep the ball on the enemy side",
        TextColor      : Color.Blue,
        Location       : Location.Top,
        SortOrder      : 2,
        Spectators     : Spectators.VisibleAlways
    );
    tutorialText[0] = LastTextID();
    CreateHudText(
        VisibleTo      : AllPlayers(),
        Subheader      : <"<0> seconds on switch", detonationTime + 1>,
        SubheaderColor : Color.Orange,
        Location       : Location.Top,
        SortOrder      : 3,
        Spectators     : Spectators.VisibleAlways
    );
    tutorialText[1] = LastTextID();
}

rule: "Volleyball: Cleanup"
if (gamemode != Mode.Volleyball)
{
    volleyball = false;
    DestroyEffect(laser1Effect);
    DestroyEffect(laser2Effect);
    DestroyEffect(laser3Effect);
    DestroyCounterText();
    StopChasingVariable(detonationCounter);
}

rule: "Volleyball: Show counter"
if (volleyball)
if (!ballIsOnStand)
if (ballReady)
{
    DestroyCounterText();

    CreateInWorldText(
        VisibleTo:AllPlayers(OppositeTeamOf(onTeam)),
        Header:detonationCounter,
        Position:PositionOf(rootBall) + Vector(0, 1.5, 0),
        Scale:2,
        Clipping:Clipping.ClipAgainstSurfaces,
        TextColor:Color.White,
        Spectators:Spectators.VisibleAlways
    );
    counterTexts[0] = LastTextID();

    CreateInWorldText(
        VisibleTo: FilteredArray(AllPlayers(onTeam), !ballIsGettingCharged && ballOnGround),
        Header:<"<1> <0> <1>", detonationCounter, IconString(Icon.Warning)>,
        Position:PositionOf(rootBall) + Vector(0, 1.5, 0),
        Scale:2,
        Clipping:Clipping.ClipAgainstSurfaces,
        TextColor:Color.Red,
        Spectators:Spectators.VisibleAlways
    );
    counterTexts[1] = LastTextID();

    CreateInWorldText(
        VisibleTo: FilteredArray(AllPlayers(onTeam), ballIsGettingCharged || !ballOnGround),
        Header:<"<1> <0> <1>", detonationCounter, IconString(Icon.Warning)>,
        Position:PositionOf(rootBall) + Vector(0, 1.5, 0),
        Scale:2,
        Clipping:Clipping.ClipAgainstSurfaces,
        TextColor:Color.Orange,
        Spectators:Spectators.VisibleAlways
    );
    counterTexts[2] = LastTextID();
}

playervar define blueSide = true;

// For some reason, IsOnGround(rootBall) isn't reevaluating
globalvar define ballOnGround;
rule: "e"
if (IsOnGround(rootBall))
{
    ballOnGround = true;
}
rule: "e"
if (IsInAir(rootBall))
{
    ballOnGround = false;
}

rule: "Volleyball: Kill players touching net"
Event.OngoingPlayer
if (volleyball)
if (!isWorkingDummy)
// The net is at x=0 of the map, so just test if the player has a low X coordinate.
if ((blueSide && (PositionOf().X < 0.35)) || (!blueSide && (PositionOf().X > -0.35)))
// 158.38 is the base position plus the height of the tallest net beam effect.
{
    if (YOf(PositionOf()) < 158.38)
        Kill(EventPlayer(), null);
    else
        blueSide = !blueSide;
}

rule: "Volleyball: Start volleyball counter"
if (volleyball)
if (ballReady)
if (IsOnGround(rootBall))
if (!isCountingDown)
if (!ballIsOnStand)
if (!ballIsGettingCharged)
{
    UnpauseMatchTime();
    UnpauseMatchTime();
    ChaseVariableAtRate(detonationCounter, 0, 1, RateChaseReevaluation.None);
    isCountingDown = true;
}

rule: "Volleyball: Ball on Team 1's side"
if (volleyball)
if (ballReady)
if (!ballIsOnStand)
if (XOf(PositionOf(rootBall)) > 0)
{
    onTeam = Team.Team1;
    sideSwitched();
}

rule: "Volleyball: Ball on Team 2's side"
if (volleyball)
if (ballReady)
if (!ballIsOnStand)
if (XOf(PositionOf(rootBall)) < 0)
{
    onTeam = Team.Team2;
    sideSwitched();
}

void sideSwitched()
{
    SetMatchTime(detonationTime);
    StopChasingVariable(detonationCounter);
    detonationCounter = detonationTime;
    isCountingDown = false;
    detonationTime = Max(2, detonationTime - 1);
    PauseMatchTime();
}

rule: "Volleyball: Volleyball detonates"
if (volleyball)
if (ballReady)
if (IsOnGround(rootBall))
if (isCountingDown)
if (detonationCounter == 0)
if (!ballIsGettingCharged)
{
    PlayEffect(AllPlayers(), PlayEffect.RingExplosionSound, Color.Team1, PositionOf(rootBall), 150);

    BigMessage(AllPlayers(OppositeTeamOf(onTeam)), <"<0> Your team scores! <0>", IconString(Icon.Fire)>);
    BigMessage(AllPlayers(onTeam), <"<0> The enemy team scores! <0>", IconString(Icon.Recycle)>);
    
    async! PointScored();
    // Team 1 scores
    if (onTeam == Team.Team2)
    {
        PlayEffect(AllPlayers(), PlayEffect.RingExplosion, Color.Team1, PositionOf(rootBall), 150);
        blueScore++;
    }
    // Team 2 scores
    else
    {
        PlayEffect(AllPlayers(), PlayEffect.RingExplosion, Color.Team2, PositionOf(rootBall), 150);
        redScore++;
    }

    detonationTime = 10;
    respawnBall();
    StopVolleyballCountdown();
}

rule: "Volleyball: Reset on respawn" 1
if (volleyball)
if (ballReady)
if (isCountingDown)
if (ballIsOnStand)
{
    // SmallMessage(AllPlayers(), "Volleyball: Reset");
    StopVolleyballCountdown();
}

void StopVolleyballCountdown()
{
    isCountingDown = false;
    StopChasingVariable(detonationCounter);
    DestroyCounterText();
}

void DestroyCounterText() "Destroy Counter Text"
{
    DestroyInWorldText(counterTexts[0]);
    DestroyInWorldText(counterTexts[1]);
    DestroyInWorldText(counterTexts[2]);
}