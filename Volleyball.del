import "Ball.del";

rule: "Debug Volleyball"
if (IsCommunicating(HostPlayer(), Communication.EmoteRight))
{
    volleyball = !volleyball;
}

define globalvar volleyball;
define globalvar netLength !;
define globalvar detonationCounter;
define globalvar detonationTime;
define globalvar isCountingDown;
define globalvar onTeam;
define globalvar counterText1 !;
define globalvar counterText2 !;
define globalvar tutorialText !;

rule: "Setup volleyball"
if (volleyball)
{
    ball = true;

    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        PolePos() + Vector(0, 0.5, netLength),
        PolePos() + Vector(0, 0.5, -netLength),
        Color.Red,
        EffectRev.VisibleToPositionAndRadius
    );
    laser1Effect = LastCreatedEntity();

    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        PolePos() + Vector(0, 2, netLength),
        PolePos() + Vector(0, 2, -netLength),
        Color.Red,
        EffectRev.VisibleToPositionAndRadius
    );
    laser2Effect = LastCreatedEntity();

    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        PolePos() + Vector(0, 3.5, netLength),
        PolePos() + Vector(0, 3.5, -netLength),
        Color.Red,
        EffectRev.VisibleToPositionAndRadius
    );
    laser3Effect = LastCreatedEntity();

    netLength = 150;
    detonationTime = 10;

    CreateHudText(
        VisibleTo      : AllPlayers(),
        Header         : IconString(Icon.Halo),
        HeaderColor    : Color.Turquoise,
        Text           : "Keep the ball on the enemy side!",
        TextColor      : Color.White,
        Subheader      : <"<0> seconds", detonationTime>,
        SubheaderColor : Color.Orange,
        Location       : Location.Top,
        SortOrder      : 2,
        Spectators     : Spectators.VisibleAlways
    );
    tutorialText = LastTextID();
}

rule: "Cleanup volleyball"
if (!volleyball)
{
    ball = false;
    DestroyEffect(laser1Effect);
    DestroyEffect(laser2Effect);
    DestroyEffect(laser3Effect);
    DestroyInWorldText(counterText1);
    DestroyInWorldText(counterText2);
    DestroyHudText(tutorialText);
    StopChasingGlobalVariable(detonationCounter);
}

rule: "Show counter"
if (volleyball)
if (!ballIsOnStand)
if (ballReady)
{
    CreateInWorldText(
        VisibleTo:AllPlayers(OppositeTeamOf(onTeam)),
        Header:detonationCounter,
        Position:ballLocation() + Vector(0, 0.5, 0),
        Scale:2,
        Clipping:Clipping.ClipAgainstSurfaces,
        TextColor:Color.White,
        Spectators:Spectators.VisibleAlways
    );
    counterText1 = LastTextID();

    CreateInWorldText(
        VisibleTo:AllPlayers(onTeam),
        Header:<"<1> <0> <1>", detonationCounter, IconString(Icon.Warning)>,
        Position:ballLocation() + Vector(0, 0.5, 0),
        Scale:2,
        Clipping:Clipping.ClipAgainstSurfaces,
        TextColor:Color.Red,
        Spectators:Spectators.VisibleAlways
    );
    counterText2 = LastTextID();
}

rule: "Kill players touching net"
Event.OngoingPlayer
if (volleyball)
if (!isBall)
// The net is at x=0 of the map, so just test if the player has a low X coordinate.
if (AbsoluteValue(XOf(PositionOf())) <= 1)
// 158.38 is the base position plus the height of the tallest net beam effect.
if (YOf(PositionOf()) < 158.38)
{
    Kill(EventPlayer(), null);
}

rule: "Start volleyball counter"
if (volleyball)
if (ballReady)
if (IsOnGround(rootBall))
if (!isCountingDown)
if (!ballIsOnStand)
{
    ChaseGlobalVariableAtRate(detonationCounter, 0, 1, RateChaseReevaluation.None);
    isCountingDown = true;
}

rule: "Ball on Team 1's side"
if (volleyball)
if (ballReady)
if (!ballIsOnStand)
if (XOf(PositionOf(rootBall)) > 0)
{
    onTeam = Team.Team1;
    sideSwitched();
}

rule: "Ball on Team 2's side"
if (volleyball)
if (ballReady)
if (!ballIsOnStand)
if (XOf(PositionOf(rootBall)) < 0)
{
    onTeam = Team.Team2;
    sideSwitched();
}

method sideSwitched()
{
    StopChasingGlobalVariable(detonationCounter);
    detonationCounter = detonationTime;
    isCountingDown = false;
    detonationTime = Max(2, detonationTime - 1);
}

rule: "Volleyball detonates"
if (volleyball)
if (ballReady)
if (IsOnGround(rootBall))
if (isCountingDown)
if (detonationCounter == 0)
{
    PlayEffect(AllPlayers(), PlayEffect.RingExplosionSound, Color.Team1, PositionOf(rootBall), 150);

    BigMessage(AllPlayers(OppositeTeamOf(onTeam)), <"<0> Your team scores! <0>", IconString(Icon.Fire)>);
    BigMessage(AllPlayers(onTeam), <"<0> The enemy team scores! <0>", IconString(Icon.Recycle)>);
    
    // Team 1 scores
    if (onTeam == Team.Team2)
    {
        PlayEffect(AllPlayers(), PlayEffect.RingExplosion, Color.Team1, PositionOf(rootBall), 150);
        blueScore++;
    }
    // Team 2 scores
    else
    {
        PlayEffect(AllPlayers(), PlayEffect.RingExplosion, Color.Team2, PositionOf(rootBall), 150);
        redScore++;
    }

    isCountingDown = false;
    detonationTime = 10;
    StopChasingGlobalVariable(detonationCounter);
    DestroyInWorldText(counterText1);
    DestroyInWorldText(counterText2);
    respawnBall();
}