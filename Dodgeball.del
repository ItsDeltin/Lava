import "Lava.del";

playervar define dodgeball_holder;
playervar Vector dodgeball_pos;
playervar define dodgeball_velocity;
playervar define dodgeball_thrown;
playervar define dodgeball_in_motion;
playervar define dodgeball_gravity_enabled = true;
playervar define dodgeball_ultimate_used_on_ball;

rule: "Dodgeball Ultimate"
Event.OngoingPlayer
Player.Sigma
if (gamemode == Mode.Dodgeball)
if (IsUsingUltimate())
if (IsButtonHeld(EventPlayer(), Button.PrimaryFire))
{
    Vector shootAt = null;
    CreateEffect(EventPlayer(), Effect.LightShaft, Color.Blue, lookingAtPlanePoint, 0.5, EffectRev.VisibleToPositionAndRadius);
    define entity = LastCreatedEntity();

    define affected = FilteredArray(AllPlayers(), DistanceBetween(ArrayElement().dodgeball_pos * Vector(1,0,1), lookingAtPlanePoint * Vector(1, 0, 1)) < 10);
    affected.dodgeball_gravity_enabled = false;
    affected.dodgeball_in_motion = false;
    affected.dodgeball_ultimate_used_on_ball = true;
    affected.dodgeball_holder = EventPlayer();
    affected.dodgeball_thrown = true;
    Wait(1.3);
    StopChasingVariable(affected.dodgeball_pos);

    shootAt = lookingAtPlanePoint;

    for (define i = 0; CountOf(affected); 1)
        affected[i].dodgeball_velocity = affected[i].dodgeball_pos.DirectionTowards(shootAt) * 100;
    affected.dodgeball_gravity_enabled = true;
    affected.dodgeball_ultimate_used_on_ball = false;
    affected.dodgeball_in_motion = true;

    DestroyEffect(entity);
}

rule: "Dodgeball Ultimate Per Player Handler"
Event.OngoingPlayer
if (dodgeball_ultimate_used_on_ball)
{
    define rate = 6;
    ChaseVariableAtRate(dodgeball_pos, dodgeball_pos * Vector(1,0,1) + Vector(0,170,0), rate, RateChaseReevaluation.DestinationAndRate);
    Wait(0.7);
    ChaseVariableOverTime(rate, 15, 1, TimeChaseReevaluation.None);
    Wait(1);
    StopChasingVariable(rate);
}

Vector lookingAtPlanePoint: LinePlaneIntersection(EyePosition(), FacingDirectionOf(), planePos, Up());