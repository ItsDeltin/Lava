import "Lava.del";

define globalvar ball1;
define globalvar ball2;
define globalvar balls;
define playervar isBall;
define globalvar ballIsOnStand = true;
define globalvar status;
define globalvar tpFrom;
define globalvar tpTo;
define globalvar rootBall;

rule: "Setup balls"
{
    CreateDummyBot(Hero.Torbjorn, Team.Team1, 5, TopPolePos());
    ball1 = LastCreatedEntity();
    ball1.isBall = true;
    rootBall = ball1;

    CreateDummyBot(Hero.Torbjorn, Team.Team2, 5, TopPolePos() + Vector(0, 1, 0));
    ball2 = LastCreatedEntity();
    ball2.isBall = true;

    balls = [ball1,ball2];
    SetStatus(ball1, null, Status.Unkillable, 9999);
    SetStatus(ball2, null, Status.Unkillable, 9999);
    SetInvisible(ball1, InvisibleTo.All);
    SetInvisible(ball2, InvisibleTo.All);

    CreateEffect(AllPlayers(), Effect.Sphere, Color.Turquoise, ballLocation(), 1.25, EffectRev.VisibleToPositionAndRadius);

    CreateHudText(AllPlayers(), "Ball Ground", null, PositionOf(rootBall), Location.Top);
    CreateHudText(AllPlayers(), "Velocity", null, VelocityOf(rootBall), Location.Top);
}

macro ballLocation(): tpTo != null ? tpTo + Vector(0, 1, 0) : Midpoint(ball1,ball2) + Vector(0, 0.5, 0);
macro ballSpeed(): SpeedOf(rootBall);

rule: "Link"
{
    if ((IsInAir(ball1) || IsInAir(ball2)))
    {
        if (tpTo == null)
        {
            if (SpeedOf(ball1) >= SpeedOf(ball2))
            {
                tpFrom = ball2;
                tpTo = ball1;
            }
            else
            {
                tpFrom = ball1;
                tpTo = ball2;
            }
        }
    }
    else
    {
        if (isStunned(ball1))
        {
            tpFrom = ball2;
            tpTo = ball1;
        }
        else if (isStunned(ball2))
        {
            tpFrom = ball1;
            tpTo = ball2;
        }
        else
        {
            tpFrom = null;
            tpTo = null;
        }
    }

    if (tpTo != null) rootBall = tpTo;

    Teleport(tpFrom, PositionOf(tpTo) + Vector(0, 1, 0));

    Wait(0.025);
    Loop();
}
macro isStunned(define player): HasStatus(player, Status.Stunned);

rule: "Respawn ball"
if (IsDead(ball1) || IsDead(ball2) || YOf(ballLocation()) < 140 || isOnWall(rootBall))
{
    Respawn(ball1);
    Respawn(ball2);

    MinWait();

    Teleport(ball1, TopPolePos());
    Teleport(ball2, TopPolePos() + Vector(0, 1, 0));
    ballIsOnStand = true;
}

rule: "On Ball Hit"
Event.OnDamageTaken
if (isBall)
if (!IsInSpawnRoom(ball1) && !IsInSpawnRoom(ball2))
{
    SmallMessage(AllPlayers(), EventDamage());
    Heal(EventPlayer(), null, EventDamage());
}

rule: "On Hammer Hit"
Event.OnDamageTaken
if (isBall)
if (EventDamage() == 72) // 75 for no armor
if (!IsInSpawnRoom())
{
    ApplyImpulse(EventPlayer(), Vector(0, 1, 0), 15, Relative.ToWorld, ContraryMotion.Incorporate);
}

define playervar knockedFrom = null;

rule: "On Fire Strike"
Event.OnDamageTaken
if (isBall)
if (EventDamage() == 97) // 100 for no armor
if (!IsInSpawnRoom())
{
    define fuse = 0;
    ChasePlayerVariableOverTime(EventPlayer(), fuse, 2, 3);

    CreateEffect(AllPlayers(), Effect.BadAura, Color.Orange, ballLocation(), fuse, EffectRev.VisibleToPositionAndRadius);
    define fuseEffect = LastCreatedEntity();
    Wait(3, WaitBehavior.IgnoreCondition);
    DestroyEffect(fuseEffect);

    PlayEffect(AllPlayers(), PlayEffect.GoodExplosion, Color.Orange, ballLocation(), ExplosionRange());
    PlayEffect(AllPlayers(), PlayEffect.ExplosionSound, Color.Orange, ballLocation(), 100);
    Damage(NotBall(), Attacker(), 200);
    NotBall().knockedFrom = ballLocation();
}
macro NotBall(): FilteredArray(AllPlayers(), !ArrayElement().isBall && DistanceBetween(ArrayElement(), ballLocation()) < ExplosionRange());
macro ExplosionRange(): 10;

rule: "Knocked"
Event.OnDamageTaken
if (knockedFrom != null)
{
    ApplyImpulse(EventPlayer(), DirectionTowards(knockedFrom, PositionOf() + Vector(0, 1.5, 0)), 30, Relative.ToWorld, ContraryMotion.Incorporate);
    knockedFrom = null;
}

rule: "Effect when ball hits ground"
if (IsOnGround(rootBall))
{
    PlayEffect(AllPlayers(), PlayEffect.RingExplosion, Color.White, PositionOf(rootBall), 5);
}

rule: "Fast ball effect"
if (!ballIsOnStand)
if (ballSpeed() >= 10 || IsInAir(rootBall))
{
    PlayEffect(FilteredArray(AllPlayers(), DistanceBetween(ArrayElement(), rootBall) > 6), PlayEffect.BadExplosion, Color.Turquoise, ballLocation(), 0.3);
    MinWait();
    LoopIfConditionIsTrue();
}

// rule: "Shoot At Team"
// if (IsTrueForAny(AllPlayers(), IsCommunicating(ArrayElement(), Communication.Hello)))
// {
//     define ball = team == Team.Team1 ? ball1 : ball2;

//     // Start the ultimate
//     SetUltimateCharge(ball, 100);
//     PressButton(ball, Button.Ultimate);
//     SetDamageDealt(ball, 300);
//     SetProjectileGravity(ball, 0);

//     define fireAt = FirstOf(SortedArray(
//         FilteredArray(AllPlayers(), !ArrayElement().isBall && TeamOf(ArrayElement()) != team),
//         DistanceBetween(ArrayElement(), ball)
//     ));

//     // Fire at closest enemy player for 3 seconds
//     StartFacing(
//         ball,
//         DirectionTowards(EyePosition(ball), EyePosition(fireAt)) + Vector(0, (DistanceBetween(ball, fireAt) * 0), 0),
//         750,
//         Relative.ToWorld,
//         FacingRev.DirectionAndTurnRate
//     );
//     StartHoldingButton(ball, Button.PrimaryFire);
//     Wait(3);

//     StopHoldingButton(ball);
//     SetDamageDealt(ball, 100);
//     StopFacing(ball);
//     SetProjectileGravity(ball, 100);

//     Loop();
// }