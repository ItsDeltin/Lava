import "Lava.del";

rule: "Debug Ball"
Event.OngoingPlayer
if (IsCommunicating(EventPlayer(), Communication.EmoteUp))
{
    if (!ball)
    {
        ball = true;
        goals = true;
    }
    else
    {
        ball = false;
        goals = false;
    }
}

define globalvar ball1;
define globalvar ball2;
define playervar isBall;
define globalvar ballIsOnStand = true;
define globalvar tpFrom;
define globalvar tpTo;
define globalvar rootBall;

define globalvar thrower = null;
define globalvar throwType = 0;

define globalvar blueScoreText !;
define globalvar redScoreText !;
define globalvar ballEffect !;

define globalvar ball;
define globalvar ballReady;

rule: "Setup balls"
if (ball)
{
    // Blue's score text
    CreateHudText(
        VisibleTo      : AllPlayers(Team.Team1),
        Header         : IconString(Icon.Dizzy),
        HeaderColor    : Color.SkyBlue,
        Subheader      : <"Enemy score: <0>", redScore>,
        SubheaderColor : Color.Red,
        Text           : <"Your team's score: <0>", blueScore>,
        TextColor      : Color.SkyBlue,
        Location       : Location.Top,
        SortOrder      : 1,
        Spectators     : Spectators.VisibleAlways
    );
    blueScoreText = LastTextID();

    // Red's score text
    CreateHudText(
        VisibleTo      : AllPlayers(Team.Team2),
        Header         : IconString(Icon.Dizzy),
        HeaderColor    : Color.SkyBlue,
        Subheader      : <"Enemy score: <0>", blueScore>,
        SubheaderColor : Color.Red,
        Text           : <"Your team's score: <0>", redScore>,
        TextColor      : Color.SkyBlue,
        Location       : Location.Top,
        SortOrder      : 1,
        Spectators     : Spectators.VisibleAlways
    );
    redScoreText = LastTextID();

    CreateDummyBot(Hero.Torbjorn, Team.Team1, 5, TopPolePos());
    ball1 = LastCreatedEntity();
    ball1.isBall = true;
    rootBall = ball1;

    CreateDummyBot(Hero.Torbjorn, Team.Team2, 5, TopPolePos() + Vector(0, 1, 0));
    ball2 = LastCreatedEntity();
    ball2.isBall = true;

    SetStatus(ball1, null, Status.Unkillable, 9999);
    SetStatus(ball2, null, Status.Unkillable, 9999);
    SetInvisible(ball1, InvisibleTo.All);
    SetInvisible(ball2, InvisibleTo.All);

    CreateEffect(AllPlayers(), Effect.Sphere, Color.Turquoise, ballLocation(), 1.25, EffectRev.VisibleToPositionAndRadius);
    ballEffect = LastCreatedEntity();

    ballReady = true;
}

rule: "Clean up ball game"
if (!ball)
{
    ballReady = false;
    DestroyHudText(blueScoreText);
    DestroyHudText(redScoreText);
    DestroyEffect(ballEffect);
    DestroyDummyBot(TeamOf(ball1), SlotOf(ball1));
    DestroyDummyBot(TeamOf(ball2), SlotOf(ball2));
    tpFrom = null;
    tpTo = null;
    rootBall = null;
}

macro ballLocation(): tpTo != null ? tpTo + Vector(0, 1, 0) : Midpoint(ball1,ball2) + Vector(0, 0.5, 0);
macro ballSpeed(): SpeedOf(rootBall);

rule: "Link"
if (ball)
{
    if (IsInAir(ball1) || IsInAir(ball2))
    {
        if (tpTo == null)
        {
            if (SpeedOf(ball1) >= SpeedOf(ball2))
            {
                tpFrom = ball2;
                tpTo = ball1;
            }
            else
            {
                tpFrom = ball1;
                tpTo = ball2;
            }
        }
    }
    else
    {
        if (isStunned(ball1))
        {
            tpFrom = ball2;
            tpTo = ball1;
        }
        else if (isStunned(ball2))
        {
            tpFrom = ball1;
            tpTo = ball2;
        }
        else
        {
            tpFrom = null;
            tpTo = null;
        }
    }

    if (tpTo != null) rootBall = tpTo;

    Teleport(tpFrom, PositionOf(tpTo) + Vector(0, 1, 0));

    Wait(0.1);
    LoopIfConditionIsTrue();
}
macro isStunned(define player): HasStatus(player, Status.Stunned);

rule: "Respawn ball"
if (ball)
if (IsDead(ball1) || IsDead(ball2) || YOf(ballLocation()) < 140 || ZOf(ballLocation()) > 217)
{
    SmallMessage(AllPlayers(), "Respawning Ball");
    respawnBall();   
}

rule: "Bounce back ball"
if (ball)
if (!ballIsOnStand)
if (!HasStatus(rootBall, Status.Stunned))
if (ballSpeed() < 1)
if (isOnWall(rootBall))
{
    ApplyImpulse(rootBall, DirectionTowards(PositionOf(rootBall), TopPolePos() + Vector(0, 20, 0)), 15, Relative.ToWorld, ContraryMotion.Cancel);
}

method respawnBall()
{
    ballIsOnStand = true;

    Respawn(ball1);
    Respawn(ball2);

    MinWait();

    Teleport(ball1, TopPolePos());
    Teleport(ball2, TopPolePos() + Vector(0, 1, 0));
}

rule: "On Ball Hit"
Event.OnDamageTaken
if (isBall)
if (!IsInSpawnRoom(ball1) && !IsInSpawnRoom(ball2))
{
    SmallMessage(AllPlayers(), EventDamage());
    Heal(EventPlayer(), null, EventDamage());

    // Hammer hit
    if (EventDamage() == 72)
    {
        ApplyImpulse(EventPlayer(), Vector(0, 1, 0), 20, Relative.ToWorld, ContraryMotion.Incorporate);
        thrower = Attacker();
        throwType = 0;
    }
    // Charge bump
    else if (EventDamage() == 47)
    {
        thrower = Attacker();
        throwType = 1;
    }
}

rule: "On Fire Strike"
Event.OnDamageTaken
if (isBall)
if (EventDamage() == 97)
{
    define fuse = 0;
    ChasePlayerVariableOverTime(EventPlayer(), fuse, 2, 3);

    CreateEffect(AllPlayers(), Effect.BadAura, Color.Orange, ballLocation(), fuse, EffectRev.VisibleToPositionAndRadius);
    define fuseEffect = LastCreatedEntity();
    Wait(3, WaitBehavior.IgnoreCondition);
    DestroyEffect(fuseEffect);

    PlayEffect(AllPlayers(), PlayEffect.GoodExplosion, Color.Orange, ballLocation(), ExplosionRange());
    PlayEffect(AllPlayers(), PlayEffect.ExplosionSound, Color.Orange, ballLocation(), 100);

    define inExplosionRange = FilteredArray(AllPlayers(), DistanceBetween(ArrayElement(), ballLocation()) < ExplosionRange());

    Damage(inExplosionRange, Attacker(), 200);
    inExplosionRange.knockedFrom = ballLocation();
    inExplosionRange.force = 30;
    inExplosionRange.heightOffset = 1.5;
}
macro ExplosionRange(): 10;

rule: "Getting charged"
Event.OngoingPlayer
if (isBall)
if (HasStatus(EventPlayer(), Status.Stunned))
{
    define closest = 
        FirstOf(FilteredArray(
            AllPlayers(),
            HeroOf(ArrayElement()) == Hero.Reinhardt && DistanceBetween(ArrayElement(), EventPlayer()) < 3 && IsUsingAbility1(ArrayElement())
        ));

    if (closest != null)
    {
        thrower = closest;
        throwType = 2;
    }
}

rule: "Effect when ball hits ground"
if (ball)
if (IsOnGround(rootBall))
{
    PlayEffect(AllPlayers(), PlayEffect.RingExplosion, Color.Turquoise, PositionOf(rootBall), 5);
}

rule: "Fast ball effect"
if (ball)
if (!ballIsOnStand)
if (ballSpeed() >= 10 || IsInAir(rootBall))
{
    PlayEffect(FilteredArray(AllPlayers(), DistanceBetween(ArrayElement(), rootBall) > 6), PlayEffect.BadExplosion, Color.Turquoise, ballLocation(), 0.3);
    MinWait();
    LoopIfConditionIsTrue();
}

// rule: "Shoot At Team"
// if (IsTrueForAny(AllPlayers(), IsCommunicating(ArrayElement(), Communication.Hello)))
// {
//     define ball = team == Team.Team1 ? ball1 : ball2;

//     // Start the ultimate
//     SetUltimateCharge(ball, 100);
//     PressButton(ball, Button.Ultimate);
//     SetDamageDealt(ball, 300);
//     SetProjectileGravity(ball, 0);

//     define fireAt = FirstOf(SortedArray(
//         FilteredArray(AllPlayers(), !ArrayElement().isBall && TeamOf(ArrayElement()) != team),
//         DistanceBetween(ArrayElement(), ball)
//     ));

//     // Fire at closest enemy player for 3 seconds
//     StartFacing(
//         ball,
//         DirectionTowards(EyePosition(ball), EyePosition(fireAt)) + Vector(0, (DistanceBetween(ball, fireAt) * 0), 0),
//         750,
//         Relative.ToWorld,
//         FacingRev.DirectionAndTurnRate
//     );
//     StartHoldingButton(ball, Button.PrimaryFire);
//     Wait(3);

//     StopHoldingButton(ball);
//     SetDamageDealt(ball, 100);
//     StopFacing(ball);
//     SetProjectileGravity(ball, 100);

//     Loop();
// }