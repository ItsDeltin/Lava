import "Reinhardt.del";
import "Ball.del";
import "Score.del";
import "Lasers.del";
import "Volleyball.del";
import "Maze.del";
import "Debug Tools.del";

define globalvar origin = Vector(-0.18, 154.88, 60);

rule: "TP to arena"
Event.OngoingPlayer
if (HasSpawned())
if (IsAlive())
if (!isBall)
{
    Teleport(EventPlayer(), origin + Vector(20, 0, 20));
}

macro rowCount(): 50;
macro columnCount(): 35;

disabled rule: "Setup Arena"
{
    OuterWalls();

    define cliffBlue ! = Vector(107.07, 154.88, 63.61);
    define cliffRed ! = Vector(-109.08, 154.88, 65.06);
    define towerBlue ! = Vector(108.08, 154.88, 213.35);
    define towerRed ! = Vector(-108.07, 154.88, 214.81);
    define rowFraction ! = 1/rowCount();
    define columnFraction ! = 1/columnCount();

    for (define x ! = 0; x <= rowCount(); x++)
    {
        CreateBeamEffect(
            AllPlayers(),
            BeamType.GrappleBeam,
            LinearInterpolate(cliffBlue, cliffRed, x*rowFraction),
            LinearInterpolate(towerBlue, towerRed, x*rowFraction),
            Color.Red,
            EffectRev.VisibleTo
        );
    }
    for (define z ! = 0; z <= columnCount(); z++)
    {
        CreateBeamEffect(
            AllPlayers(),
            BeamType.GrappleBeam,
            LinearInterpolate(cliffBlue, towerBlue, z*columnFraction),
            LinearInterpolate(cliffRed, towerRed, z*columnFraction),
            Color.Red,
            EffectRev.VisibleTo
        );
    }

    // Pole flair
    CreateEffect(AllPlayers(), Effect.Orb, Color.Orange, TopPolePos(), 0.25, EffectRev.VisibleTo);
    CreateBeamEffect(
        AllPlayers(),
        BeamType.GoodBeam,
        flairPos(),
        TopPolePos(),
        Color.Red
    );
    ChaseGlobalVariableAtRate(killzoneRot, 180, 25, RateChaseReevaluation.DestinationAndRate);
}

macro flairPos(): Destination(xyPolePos(136.42), DirectionFromAngles(killzoneRot, 0), 11);

disabled rule: "Reset killzone rot"
if (killzoneRot == 180)
{
    killzoneRot = -180;
}

disabled rule: "Blip end"
if (AbsoluteValue(killzoneRot - 22.5) % 45 < 1)
{
    PlayEffect(AllPlayers(), PlayEffect.GoodExplosion, Color.Red, flairPos(), 1);
}

define globalvar killzoneRot = -180;

method OuterWalls()
{
    // Cliff side
    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        Vector(-109.08, 158.44, 65.06),
        Vector(107.07, 158.44, 63.61),
        Color.Orange,
        EffectRev.VisibleTo
    );
    // Tower side
    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        Vector(108.08, 158.44, 213.35),
        Vector(-108.07, 158.44, 214.81),
        Color.Orange,
        EffectRev.VisibleTo
    );
    // Team 1 side
    // inner
    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        Vector(108.08, 158.44, 213.35),
        Vector(107.07, 158.44, 63.61),
        Color.Team1,
        EffectRev.VisibleTo
    );
    // Outer
    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        Vector(115.69, 158.44, 213.35),
        Vector(115.69, 158.44, 63.61),
        Color.Team1,
        EffectRev.VisibleTo
    );
    // Team 2 side
    // Inner
    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        Vector(-109.08, 158.44, 65.06),
        Vector(-108.07, 158.44, 214.81),
        Color.Team2,
        EffectRev.VisibleTo
    );
    //Outer
    CreateBeamEffect(
        AllPlayers(),
        BeamType.BadBeam,
        Vector(-118.45, 158.44, 65.06),
        Vector(-118.45, 158.44, 214.81),
        Color.Team2,
        EffectRev.VisibleTo
    );
}

macro PolePos()   : Vector(0, 154.88, 150);
macro TopPolePos(): Vector(0, 161.5,  150);
macro BaseOffset(): Vector(0, 0.5, 0);
macro xyPolePos(define y): Vector(0, y, 150);

macro isOnWall(define player): IsOnGround(player) && YOf(PositionOf(player)) > 158.4;

rule: "I want to die"
if (IsButtonHeld(HostPlayer(), Button.Interact))
{
    CreateDummyBot(Hero.Reinhardt, NumberOfPlayers(Team.Team1) < 6 ? Team.Team1 : Team.Team2, -1, PositionOf(HostPlayer()), Vector());
}